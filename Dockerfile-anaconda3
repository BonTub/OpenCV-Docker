FROM ubuntu:16.04

MAINTAINER Vishwesh Ravi Shrimali <vishweshshrimali5@gmail.com>

ENV DEBIAN_FRONTEND noninteractive

# Setup Environment Variable
ENV cvVersionChoice=1
ENV cvVersion="3.4.1"
ENV cwd="/opt"

WORKDIR $cwd

RUN apt-get update && \
	apt-get remove -y \
	x264 libx264-dev && \
	apt-get install -y \
	build-essential \
	checkinstall \
	cmake \
	pkg-config \
	yasm \
	git \
	gfortran \
	libjpeg8-dev \
	libjasper-dev \
	libpng12-dev \
	libtiff5-dev \
	libtiff-dev \
	libavcodec-dev \
	libavformat-dev \
	libswscale-dev \
	libdc1394-22-dev \
	libxine2-dev \
	libv4l-dev \
	vim

RUN cd /usr/include/linux && \
	ln -s -f ../libv4l1-videodev.h videodev.h && \
	cd $cwd

RUN apt-get install -y \
	libgstreamer0.10-dev \
	libgstreamer-plugins-base0.10-dev \
	libgtk2.0-dev \
	libtbb-dev \
	qt5-default \
	libatlas-base-dev \
	libfaac-dev \
	libmp3lame-dev \
	libtheora-dev \
	libvorbis-dev \
	libxvidcore-dev \
	libopencore-amrnb-dev \
	libopencore-amrwb-dev \
	libavresample-dev \
	x264 \
	v4l-utils \
	libprotobuf-dev \
	protobuf-compiler \
	libgoogle-glog-dev \
	libgflags-dev \
	libgphoto2-dev \
	libeigen3-dev \
	libhdf5-dev \
	doxygen

RUN apt-get install -y wget && \
	wget https://repo.anaconda.com/archive/Anaconda3-5.2.0-Linux-x86_64.sh && \
	chmod u+x Anaconda3-5.2.0-Linux-x86_64.sh && \
	/bin/bash -c "./Anaconda3-5.2.0-Linux-x86_64.sh -b -p /opt/anaconda3 && \
	echo 'export PATH=\"/opt/anaconda3/bin:$PATH\"' >> ~/.bashrc && \
	source ~/.bashrc && \
	/opt/anaconda3/bin/conda create -y -f -n cling && \
	/opt/anaconda3/bin/conda install -y -n cling xeus-cling notebook -c QuantStack -c conda-forge && \
	/opt/anaconda3/bin/conda create -y -f -n OpenCV-"$cvVersion"-py2 python=2.7 anaconda && \
	/opt/anaconda3/bin/conda install -y -n OpenCV-"$cvVersion"-py2 numpy scipy matplotlib scikit-image scikit-learn ipython && \
	/opt/anaconda3/bin/conda create -y -f -n OpenCV-"$cvVersion"-py3 python=3.6 anaconda && \
	/opt/anaconda3/bin/conda install -y -n OpenCV-"$cvVersion"-py3 numpy scipy matplotlib scikit-image scikit-learn ipython && \
	/opt/anaconda3/bin/conda install -y -c conda-forge jupyterhub==0.8.1" && \
	rm Anaconda3-5.2.0-Linux-x86_64.sh
	
RUN /bin/bash -c "source ~/.bashrc" && \
	source activate OpenCV-"$cvVersion"-py2 && \
	python -m ipykernel install --name OpenCV-"$cvVersion"-py2 && \
	source deactivate && \
	source activate OpenCV-"$cvVersion"-py3 && \
	python -m ipykernel install --name OpenCV-"$cvVersion"-py3 && \
	source deactivate

RUN git clone https://github.com/opencv/opencv.git && \
	cd opencv && \
	git checkout $cvVersion && \
	cd ..

RUN git clone https://github.com/opencv/opencv_contrib.git && \
	cd opencv_contrib && \
	git checkout $cvVersion && \
	cd ..

WORKDIR $cwd/anaconda3/envs

RUN mkdir OpenCV-"$cvVersion"-py2/opencv_include && \
	cp -r OpenCV-"$cvVersion"-py2/include/* OpenCV-"$cvVersion"-py2/opencv_include && \
	cp -r OpenCV-"$cvVersion"-py2/opencv_include/python2.7/* OpenCV-"$cvVersion"-py2/opencv_include && \
	mkdir OpenCV-"$cvVersion"-py3/opencv_include && \
	cp -r OpenCV-"$cvVersion"-py3/include/* OpenCV-"$cvVersion"-py3/opencv_include && \
	cp -r OpenCV-"$cvVersion"-py3/opencv_include/python3.6m/* OpenCV-"$cvVersion"-py3/opencv_include

RUN cd opencv && \
	mkdir build && \
	cd build && \
	cmake -DCMAKE_BUILD_TYPE=RELEASE \
	-DCMAKE_INSTALL_PREFIX=/usr/local \
	-DINSTALL_C_EXAMPLES=ON \
	-DWITH_TBB=ON \
	-DWITH_V4L=ON \
	-DWITH_QT=ON \
	-DWITH_OPENGL=ON \
	-DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
	-DPYTHON2_EXECUTABLE=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py2/bin/python \
	-DPYTHON2_INCLUDE_DIR=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py2/opencv_include \
	-DPYTHON2_LIBRARY=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py2/lib/libpython2.7.so \
	-DPYTHON2_NUMPY_INCLUDE_DIRS=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py2/lib/python2.7/site-packages/numpy/core/include \
	-DPYTHON2_PACKAGES=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py2/lib/python2.7/site-packages \
	-DPYTHON3_EXECUTABLE=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py3/bin/python \
	-DPYTHON3_INCLUDE_DIR=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py3/opencv_include \
	-DPYTHON3_LIBRARY=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py3/lib/libpython3.6m.so \
	-DPYTHON3_NUMPY_INCLUDE_DIRS=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py3/lib/python3.6/site-packages/numpy/core/include \
	-DPYTHON3_PACKAGES_PATH=/opt/anaconda3/envs/OpenCV-"$cvVersion"-py3/lib/python3.6/site-packages .. && \
	make -j4 && make install && \
	cd ..

RUN /bin/sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
RUN ldconfig

WORKDIR $cwd

#RUN cp -r ~/anaconda3/share/jupyter/kernels/xeus-cling-cpp1* /usr/local/share/jupyter/kernels/
#RUN apt-get install -y vim
#ENV PATH=$TMPPATH
#RUN apt-get install -y nodejs \
#	npm && \
#	npm install -g configurable-http-proxy && \
#	ln -s /usr/bin/nodejs /usr/bin/node

RUN /bin/bash -c "source /root/.bashrc"

ENV DEBIAN_FRONTEND teletype
